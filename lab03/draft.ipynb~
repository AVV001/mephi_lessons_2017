{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "from functools import reduce, wraps\n",
    "\n",
    "def memoization_for_fac(func):\n",
    "    cache = {}\n",
    "    @wraps(func)\n",
    "    def f(x):\n",
    "        if x not in cache:\n",
    "            cache[x] = func(x)\n",
    "        return cache[x]\n",
    "    return f\n",
    "\n",
    "@memoization_for_fac\n",
    "def fac(x):\n",
    "    return mult(1, x)\n",
    "\n",
    "def C_n_k(n, k):  \n",
    "    res = 1\n",
    "    for i in range(k + 1, n + 1):\n",
    "        res *= i\n",
    "    return int(res / fac(n - k))\n",
    "\n",
    "def mult(a,b):\n",
    "    return reduce(lambda x,y: x*y, range(a + 1, b + 1), 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.030252100840336135"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a1 = C_n_k(13, 1) * C_n_k(4, 3) * C_n_k(12, 1) * C_n_k(4, 2) * C_n_k(47, 2) / C_n_k(52, 7)\n",
    "a1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "https://en.wikipedia.org/wiki/Poker_probability#Frequency_of_5-card_lowball_poker_hands"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Populating the interactive namespace from numpy and matplotlib\n"
     ]
    }
   ],
   "source": [
    "from matplotlib import pyplot as plt\n",
    "%pylab inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f96a124dc50>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.009514999339236158\n"
     ]
    }
   ],
   "source": [
    "a = (40/47*3/46 + (1  - 41/47*40/46)) #1 комбинация ??235?? флоп\n",
    "b = (3/47*2/46 + (1  - 43/47*42/46))\n",
    "c = (2/47*9/46 + 9/47*2/46)\n",
    "d = (2/47*9/46 + 9/47*2/46)\n",
    "e = 0\n",
    "\n",
    "\n",
    "plt.plot([1,2,3,4,5], [\n",
    "    a,\n",
    "    b,\n",
    "    c,\n",
    "    d,\n",
    "    e\n",
    "], 'ro')\n",
    "plt.show()\n",
    "\n",
    "p_a = (9/49*2/48)\n",
    "p_b = (9/49*6/48)\n",
    "p_c = (9/49*40/48)\n",
    "p_d = (40/49*3/48)\n",
    "p_e = (40/49*36/48)\n",
    " \n",
    "print(a*p_a + b*p_b + c*p_c + d*p_d + e*p_e) #полная вероятность фулл хауса "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f96a124d940>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.006244218316373729\n"
     ]
    }
   ],
   "source": [
    "a = 9/46 #1 комбинация ??23510? тёрн\n",
    "b = 4/46\n",
    "c = 0\n",
    "d = 0\n",
    "e = 0\n",
    "\n",
    "\n",
    "plt.plot([1,2,3,4,5], [\n",
    "    a,\n",
    "    b,\n",
    "    c,\n",
    "    d,\n",
    "    e\n",
    "], 'ro')\n",
    "plt.show()\n",
    "\n",
    "p_a = (12/48*2/47)\n",
    "p_b = (12/48*9/47)\n",
    "p_c = (12/48*37/47)\n",
    "p_d = (37/48*3/47)\n",
    "p_e = (37/48*33/47)\n",
    " \n",
    "print(a*p_a + b*p_b + c*p_c + d*p_d + e*p_e) #полная вероятность фулл хауса "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\nSUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f969f0f2da0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.04772838830259208\n"
     ]
    }
   ],
   "source": [
    "a1 = (1-44/47*43/46) #2 комбинация ??D55?? флоп\n",
    "a2 = 1\n",
    "b = 1\n",
    "c1 = ((1-41/47*40/46) + 43/47*3/46)\n",
    "c2 = ((1-43/47*42/46) + 3/47*2/46)\n",
    "d = ((1-43/47*42/46) + 3/47*2/46)\n",
    "e = (2/47*9/46 + 9/47*2/46)\n",
    "\n",
    "\n",
    "plt.plot([1,2,3,4,5,6,7], [\n",
    "    a1,\n",
    "    a2,\n",
    "    b,\n",
    "    c1,\n",
    "    c2,\n",
    "    d,\n",
    "    e\n",
    "], 'ro')\n",
    "plt.show()\n",
    "\n",
    "p_a1 = (2/49*1/48)\n",
    "p_a2 = (3/49*2/48)\n",
    "p_b = (2/49*3/48)\n",
    "p_c1 = (2/49*44/48)\n",
    "p_c2 = (3/49*44/48)\n",
    "p_d = (44/49*3/48)\n",
    "p_e = (44/49*40/48)\n",
    " \n",
    "print(a1*p_a1 + a2*p_a2 + b*p_b + c1*p_c1 + c2*p_c2 + d*p_d + e*p_e) #полная вероятность фулл хауса "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n/wvboYIqb9ovogAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f969f005668>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.030006938020351526\n"
     ]
    }
   ],
   "source": [
    "a1 = 6/46 #2 комбинация ??D5510? тёрн\n",
    "a2 = 1\n",
    "b1 = 1\n",
    "b2 = 6/46\n",
    "c1 = 4/46\n",
    "c2 = 9/46\n",
    "d = 4/46\n",
    "e = 0\n",
    "\n",
    "\n",
    "plt.plot([1,2,3,4,5,6,7,8], [\n",
    "    a1,\n",
    "    a2,\n",
    "    b1,\n",
    "    b2,\n",
    "    c1,\n",
    "    c2,\n",
    "    d,\n",
    "    e\n",
    "], 'ro')\n",
    "plt.show()\n",
    "\n",
    "p_a1 = (2/48*1/47)\n",
    "p_a2 = (6/48*2/47)\n",
    "p_b1 = (6/48*2/47)\n",
    "p_b2 = (3/48*3/47)\n",
    "p_c1 = (6/48*36/47)\n",
    "p_c2 = (2/48*36/47)\n",
    "p_d = (36/48*3/47)\n",
    "p_e = (36/48*32/47)\n",
    " \n",
    "print(a1*p_a1 + a2*p_a2 + b1*p_b1 + b2*p_b2 + c1*p_c1 + c2*p_c2 + d*p_d + e*p_e) #полная вероятность фулл хауса "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\ntSAAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f969eee8390>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.09767200127044343\n"
     ]
    }
   ],
   "source": [
    "p_a = C_n_k(13, 1) * C_n_k(4, 2) / C_n_k(52, 2)\n",
    "p_b = C_n_k(13, 1) * C_n_k(4, 1) * C_n_k(12, 1) * C_n_k(4, 1) / C_n_k(52, 2) #префлоп\n",
    "\n",
    "plt.plot([1,2], [\n",
    "    p_a,\n",
    "    p_b\n",
    "], 'ro')\n",
    "plt.show()\n",
    "\n",
    "a1 = C_n_k(12, 1) * C_n_k(4, 3) * C_n_k(44, 2) / C_n_k(50, 5)\n",
    "a2 = C_n_k(2, 1) * C_n_k(12, 1) * C_n_k(4, 2) * C_n_k(44, 1) * C_n_k(40, 1) / C_n_k(50, 5)\n",
    "a3 = C_n_k(12, 1) * C_n_k(4, 2) * C_n_k(44, 1) / C_n_k(50, 5)\n",
    "a4 = C_n_k(12, 1) * C_n_k(44, 1) / C_n_k(50, 5)\n",
    "a5 = C_n_k(2, 1) * C_n_k(12, 1) * C_n_k(4, 3) * C_n_k(44, 1) / C_n_k(50, 5)\n",
    "a6 = C_n_k(2, 1) * C_n_k(12, 1) / C_n_k(50, 5)\n",
    "a7 = C_n_k(12, 1) * C_n_k(4, 3) / C_n_k(50, 5)\n",
    "\n",
    "b1 = C_n_k(11, 1) * C_n_k(4, 3) * C_n_k(10, 1) * C_n_k(4, 2) / C_n_k(50, 5)\n",
    "b2 = 2 * C_n_k(3, 1) * C_n_k(11, 1) * C_n_k(4, 2) * C_n_k(4, 3) * C_n_k(40, 1) / C_n_k(50, 5)\n",
    "b3 = 2 * C_n_k(3, 1) * C_n_k(4, 1) / C_n_k(50, 5)\n",
    "b4 = 2 * C_n_k(3, 2) * C_n_k(11, 1) * C_n_k(4, 3) / C_n_k(50, 5)\n",
    "b5 = 2 * C_n_k(3, 2) * C_n_k(11, 1) * C_n_k(4, 2) * C_n_k(40, 1) / C_n_k(50, 5)\n",
    "b6 = 2 * C_n_k(11, 1) * C_n_k(4, 2) / C_n_k(50, 5)\n",
    "b7 = 2 * C_n_k(3, 2) * C_n_k(3, 1) * C_n_k(44, 2) / C_n_k(50, 5)\n",
    "b8 = 2 * C_n_k(3, 1) * C_n_k(44, 1) / C_n_k(50, 5)\n",
    "b9 = 2 * C_n_k(3, 2) / C_n_k(50, 5)\n",
    "b10 = C_n_k(3, 1) * C_n_k(11, 1) * C_n_k(3, 1) * C_n_k(4, 3) / C_n_k(50, 5)\n",
    "b11 = C_n_k(3, 2) * C_n_k(3, 2) * C_n_k(44, 1) / C_n_k(50, 5)\n",
    " \n",
    "print(p_a * (a1 + a2 + a3 + a4 + a5 + a6 + a7) + p_b * (b1 + b2 + b3 + b4 + b5 + b6 + b7 + b8 + b9 + b10 + b11))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "---"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
